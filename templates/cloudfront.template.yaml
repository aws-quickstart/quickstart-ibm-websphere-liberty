AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates a CloudFront distribution for an ALB origin. This template
  supports both HTTP and HTTPS for CloudFront. In case of SSL, you can use either
  an ACM Certificate or CloudFront's default certificate. A valid Route53 HostedZone
  is required as an input to generate the CNAME and ALB custom origin name. **WARNING**
  This template creates AWS resources. You will be billed for the AWS resources used
  if you create a stack from this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: SSL Configuration
        Parameters:
          - UseSSL
          - CloudFrontACMCertificateARN
          - HostedZoneName
      - Label:
          default: Application Load Balancer DNS
        Parameters:
          - ALBDNSName
    ParameterLabels:
      UseSSL:
        default: SSL Required?
      CloudFrontACMCertificateARN:
        default: ARN of ACM Certificate for CloudFront
      CNAMEAlias:
        default: CloudFront Alternate Domain
      HostedZoneName:
        default: Hosted Zone Name in Route53
      ALBDNSName:
        default: DNS Name of Application Load Balancer
Parameters:
  ALBDNSName:
    Description: The DNS of the Application Load Balancer.
    Type: String
  CloudFrontACMCertificateARN:
    AllowedPattern: ^$|(arn:aws:acm:)([a-z0-9/:-])*([a-z0-9])$
    Description: >-
      [ Optional ] The AWS Certification Manager certificate ARN for the CloudFront
      distribution certificate - this certificate should be created in the us-east-1
      (N. Virginia) region and must reference the main domain name you use below.
    Type: String
  CNAMEAlias:
    Default: ''
    Description: CloudFront CNAME alias to be used e.g. my-cf.xyz.example.com
    Type: String
  HostedZoneName:
    AllowedPattern: ^$|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
    Default: ''
    Description: '[ Optional ] The domain name (e.g. example.com) of a valid Hosted
      Zone on AWS. Leave empty if SSL is not required.'
    Type: String
  UseSSL:
    Default: 'No'
    Description: '[Optional] If SSL is required  [Yes or No]'
    Type: String
Conditions:
  UseCloudFrontACMCert: !Not
    - !Equals
      - !Ref 'CloudFrontACMCertificateARN'
      - ''
  UseALBSSL: !Equals
    - !Ref 'UseSSL'
    - 'Yes'
  UseHostedZone: !Not
    - !Equals
      - !Ref 'HostedZoneName'
      - ''
Resources:
  LibertyCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !If
            - UseCloudFrontACMCert
            - !Ref 'CNAMEAlias'
            - !Ref 'AWS::NoValue'
        Origins:
          - !If
            - UseALBSSL
            - DomainName: !Join
                - ''
                - - !Select
                    - '0'
                    - !Split
                      - .
                      - !Ref 'ALBDNSName'
                  - .
                  - !Ref 'HostedZoneName'
              Id: LibertyCustomOrigin
              CustomOriginConfig:
                HTTPPort: '80'
                HTTPSPort: '443'
                OriginProtocolPolicy: !If
                  - UseALBSSL
                  - https-only
                  - http-only
            - DomainName: !Ref 'ALBDNSName'
              Id: LibertyCustomOrigin
              CustomOriginConfig:
                HTTPPort: '80'
                HTTPSPort: '443'
                OriginProtocolPolicy: http-only
        Enabled: 'true'
        DefaultCacheBehavior:
          TargetOriginId: LibertyCustomOrigin
          SmoothStreaming: 'false'
          ForwardedValues:
            QueryString: 'true'
            Cookies:
              Forward: all
          ViewerProtocolPolicy: !If
            - UseALBSSL
            - https-only
            - allow-all
        ViewerCertificate: !If
          - UseCloudFrontACMCert
          - AcmCertificateArn: !Ref 'CloudFrontACMCertificateARN'
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1
          - CloudFrontDefaultCertificate: 'true'
        PriceClass: PriceClass_100
Outputs:
  CloudFrontURL:
    Description: URL for Cloudfront domain
    Value: !Join
      - ''
      - - !If
          - UseALBSSL
          - !Join
            - ''
            - - https://
              - !If
                - UseCloudFrontACMCert
                - !Ref 'CNAMEAlias'
                - !GetAtt 'LibertyCloudFrontDistribution.DomainName'
          - !Join
            - ''
            - - http://
              - !GetAtt 'LibertyCloudFrontDistribution.DomainName'
  CloudFrontDomainName:
    Description: Cloudfront domain name
    Value: !GetAtt 'LibertyCloudFrontDistribution.DomainName'
